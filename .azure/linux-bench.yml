jobs:
- job: ghcide_bench_linux
  timeoutInMinutes: 60
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      stack_810:
        STACK_YAML: "stack810.yaml"
  steps:
  - checkout: self
  - task: Cache@2
    inputs:
      key: stack-cache-v2 | $(Agent.OS) | $(Build.SourcesDirectory)/$(STACK_YAML) | $(Build.SourcesDirectory)/ghcide.cabal
      path: .azure-cache
      cacheHitVar: CACHE_RESTORED
    displayName: "Cache stack artifacts"
  - bash: |
      mkdir -p ~/.stack
      tar xzf .azure-cache/stack-root.tar.gz -C $HOME
    displayName: "Unpack cache"
    condition: eq(variables.CACHE_RESTORED, 'true')
  - bash: |
      ./fmt.sh
    displayName: "HLint via ./fmt.sh"
  - bash: |
      sudo add-apt-repository ppa:hvr/ghc
      sudo apt-get update
      sudo apt-get install -y g++ gcc libc6-dev libffi-dev libgmp-dev make zlib1g-dev cabal-install-3.2
      if ! which stack >/dev/null 2>&1; then
         curl -sSL https://get.haskellstack.org/ | sh
      fi
    displayName: 'Install Stack'
  - bash: stack setup --stack-yaml=$STACK_YAML
    displayName: 'stack setup'
  - bash: stack build --bench --only-dependencies --stack-yaml=$STACK_YAML
    displayName: 'stack build --only-dependencies'
  - bash: |
      export PATH=/opt/cabal/bin:$PATH
      stack bench --ghc-options=-Werror  --stack-yaml=$STACK_YAML || stack bench --ghc-options=-Werror --stack-yaml=$STACK_YAML|| stack bench --ghc-options=-Werror --stack-yaml=$STACK_YAML
    # ghcide stack tests are flaky, see https://github.com/digital-asset/daml/issues/2606.
    displayName: 'stack bench --ghc-options=-Werror'
  - bash: |
      mkdir -p .azure-cache
      tar czf .azure-cache/stack-root.tar.gz -C $HOME .stack
    displayName: "Pack cache"
  - bash: |
      cat bench-hist/results.csv
    displayName: "cat results"
  - publish: bench-hist/*.svg
    displayName: "publish"
